{{ define "genrest/swag"}}
package genrest

{{ range $n := $.Nodes }}
type {{$n.Name}}Node struct {
    ID {{ $n.ID.Type }} {{ with $n.Annotations.Fields.StructTag.id }}`{{ . }}`{{ else }}`{{ $n.ID.StructTag }}`{{ end }}
    {{range $f := $n.Fields}}
    {{$f.StructField}} {{ if $f.Nillable }}*{{ end }}{{ $f.Type }} `{{$f.StructTag}} {{if eq (toString $f.Type) "uuid.UUID"}}format:"uuid"{{end}} {{if eq (toString $f.Type) "time.Time"}}format:"date-time"{{end}} {{$isEnum := PaseFieldIsEnum $f}}{{if $isEnum.Has}}enums:"{{$isEnum.Values}}"{{end}}`
    {{- end}}
}

type {{$n.Name}}NodeNotID struct {
    {{range $f := $n.Fields}}
    {{$f.StructField}} {{ if $f.Nillable }}*{{ end }}{{ $f.Type }} `{{$f.StructTag}} {{if eq (toString $f.Type) "uuid.UUID"}}format:"uuid"{{end}} {{if eq (toString $f.Type) "time.Time"}}format:"date-time"{{end}} {{$isEnum := PaseFieldIsEnum $f}}{{if $isEnum.Has}}enums:"{{$isEnum.Values}}"{{end}}`
    {{- end}}
}

type {{$n.Name}}Query struct {
{{range $f := $n.Fields}}
{{$a := (PaseRestFieldQueryOp $f.Annotations)}}
{{range $method := $a}}
    {{$n.Name}}{{$f.StructField}}{{$method}}
{{- end}}
{{- end}}
    {{$page := (PaseRestNodePaging $n.Annotations)}}
    {{if eq (toString $page.Open) "true"}}
    {{$n.Name}}Paging
    {{end}}
}
{{end}}
{{end}}