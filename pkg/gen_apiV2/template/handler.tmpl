{{template "pkg_name" $.PkgName}}
import (
	"github.com/gin-gonic/gin"
)

{{range $index, $fc := $.Funcs}}
{{if (and $fc.Bind.Body.Has (eq $fc.Bind.Body.QuoteType "struct")) }}
type {{$fc.Bind.Body.SwagStructName}} {{$fc.Bind.Body.SwagRaw}}
{{end}}
{{if (and $fc.Bind.Query.Has (eq $fc.Bind.Query.QuoteType "struct")) }}
type {{$fc.Bind.Query.SwagStructName}} {{$fc.Bind.Query.SwagRaw}}
{{end}}
{{if (and $fc.Bind.Header.Has (eq $fc.Bind.Header.QuoteType "struct")) }}
type {{$fc.Bind.Header.SwagStructName}} {{$fc.Bind.Header.SwagRaw}}
{{end}}

// @Accept  json
// @Produce  json{{if $fc.Bind.Body.Has}}
// @Param body body {{$fc.Bind.Body.SwagObj}} true " "
{{- end}}{{if $fc.Bind.Query.Has}}
// @Param query query {{$fc.Bind.Query.SwagObj}} false " "
{{- end}}{{if $msg.In.InHas.HasUri}}
{{- range $fieldTag := $msg.In.InHas.UriMsg.FieldTags}}
// @Param {{$fieldTag.TagName}} path int true " "
{{- end}}{{if $msg.In.InHas.HasHeader}}
{{- range $fieldTag := $msg.In.InHas.HeaderMsg.FieldTags}}
// @Param {{$fieldTag.TagName}} header string false " "
{{- end}}
{{- end}}
{{- end}}
// @Success 200 {object} Result{data={{$fc.ResOut0}}}{{range $index, $comment := $fc.Comments}}
{{$comment}}
{{-end}}
func {{$fc.FuncName}}(c *gin.Context) (data interface{},err error) {
	in := &{{$fc.ParamIn1}}
	{{if $fc.Bind.Body.Has}}
	err = c.ShouldBindJSON(&in.Body)
	if err != nil {
		return nil, err
	}
	{{end}}
	{{if $fc.Bind.Uri.Has}}
	err = c.ShouldBindUri(&in.Uri)
	if err != nil {
		return nil, err
	}
	{{end}}
	{{if $fc.Bind.Header.Has}}
	err = c.ShouldBindHeader(&in.Header)
	if err != nil {
		return nil, err
	}
	{{end}}
	{{if $fc.Bind.Query.Has}}
	err = c.ShouldBindQuery(&in.Query)
	if err != nil {
		return nil, err
	}
	{{end}}


	return {{$.PkgName}}.{{$fc.FuncName}}(c, in)
}
{{end}}