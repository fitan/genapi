{{template "pkg_name" $.PkgName}}
import (
	"github.com/gin-gonic/gin"
)

{{range $funcName, $msg := $.FuncMap}}

// @Accept  json
// @Produce  json{{if $msg.In.InHas.HasBody}}
// @Param body body {{$msg.In.InHas.BodyMsg.PkgName}}.{{$msg.In.InHas.BodyMsg.Raw}} true " "
{{- end}}{{if $msg.In.InHas.HasQuery}}
// @Param query query {{if eq $msg.In.InHas.QueryMsg.PkgName ""}}{{else}}{{$msg.In.InHas.QueryMsg.PkgName}}.{{end}}{{$msg.In.InHas.QueryMsg.Raw}} false " "
{{- end}}{{if $msg.In.InHas.HasUri}}
{{- range $fieldTag := $msg.In.InHas.UriMsg.FieldTags}}
// @Param {{$fieldTag.TagName}} path int true " "
{{- end}}{{if $msg.In.InHas.HasHeader}}
{{- range $fieldTag := $msg.In.InHas.HeaderMsg.FieldTags}}
// @Param {{$fieldTag.TagName}} header string false " "
{{- end}}
{{- end}}
{{- end}}
// @Success 200 {object} Result{data={{$msg.Out.RawName}}}
{{$msg.FuncRouter.SwagRouter}}
func {{$funcName}}(c *gin.Context) (data interface{},err error) {
	{{if $msg.In.ObjectMsg.IsSelector}}
	in := &{{$msg.In.ObjectMsg.SelectorX}}.{{$msg.In.ObjectMsg.SelectorSel}}{}
	{{else}}
    in := &{{$msg.In.ObjectMsg.PkgName}}.{{$msg.In.ObjectMsg.SelectorSel}}{}
	{{end}}
    {{if $msg.In.InHas.HasBody}}
	err = c.ShouldBindJSON(&in.Body)
	if err != nil {
		return nil, err
	}
	{{end}}
	{{if $msg.In.InHas.HasUri}}
	err = c.ShouldBindUri(&in.Uri)
	if err != nil {
		return nil, err
	}
	{{end}}
	{{if $msg.In.InHas.HasHeader}}
	err = c.ShouldBindHeader(&in.Header)
	if err != nil {
		return nil, err
	}
	{{end}}
	{{if $msg.In.InHas.HasQuery}}
	err = c.ShouldBindQuery(&in.Query)
	if err != nil {
		return nil, err
	}
	{{end}}


	return {{$msg.SrcPkgName}}.{{$funcName}}(c, in)
}
{{end}}