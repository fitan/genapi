{{template "pkg_name" $.PkgName}}

import (
	"{{$.Config.Package}}"
{{- range $n := $.Nodes }}
	"{{$.Config.Package}}/{{lower $n.Name}}"
{{- end }}
)

{{ range $n := $.Nodes }}
func {{$n.Name}}Selete(queryer *ent.{{$n.Name}}Query)  {
	queryer.Select(
	{{range $f := $n.Fields}}
	{{if eq (PaseRestFieldOperability $f.Annotations "Selete") "true"}}
		{{lower $n.Name}}.Field{{$f.StructField}},
	{{end}}
	{{end}}
	)
}

func {{$n.Name}}CreateMutation(m *ent.{{$n.Name}}Mutation,v *ent.{{$n.Name}}) {
	{{range $f := $n.Fields}}
	{{if eq (PaseRestFieldOperability $f.Annotations "Create") "true"}}
	m.Set{{$f.StructField}}(v.{{$f.StructField}})
	{{end}}
	{{end}}
	{{range $e := $n.Edges}}
    {{if $e.Inverse}}
	{{if $e.Unique}}
	m.Set{{$e.Type.Name}}ID(v.Edges.{{$e.Type.Name}}.ID)
	{{else}}
	m.Add{{$e.Type.Name}}IDs(curd.{{$e.Type.Name}}Obj.GetIDs(v.Edges.{{plural $e.Type.Name}})...)
    {{end}}
	{{end}}
	{{end}}
}

func {{$n.Name}}UpdateMutation(m *ent.{{$n.Name}}Mutation,v *ent.{{$n.Name}}) {
	{{range $f := $n.Fields}}
	{{if eq (PaseRestFieldOperability $f.Annotations "Create") "true"}}
	m.Set{{$f.StructField}}(v.{{$f.StructField}})
	{{end}}
	{{end}}
	{{range $e := $n.Edges}}
    {{if $e.Inverse}}
	{{if $e.Unique}}
	m.Set{{$e.Type.Name}}ID(v.Edges.{{$e.Type.Name}}.ID)
	{{else}}
	m.Add{{$e.Type.Name}}IDs(curd.{{$e.Type.Name}}Obj.GetIDs(v.Edges.{{plural $e.Type.Name}})...)
    {{end}}
	{{end}}
	{{end}}
}
{{end}}