// Code generated by entc, DO NOT EDIT.

package user

import (
	"time"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldPhone holds the string denoting the phone field in the database.
	FieldPhone = "phone"
	// FieldDisable holds the string denoting the disable field in the database.
	FieldDisable = "disable"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// EdgeRoleBind holds the string denoting the role_bind edge name in mutations.
	EdgeRoleBind = "role_bind"
	// EdgeAlert holds the string denoting the alert edge name in mutations.
	EdgeAlert = "alert"
	// EdgeMsg holds the string denoting the msg edge name in mutations.
	EdgeMsg = "msg"
	// Table holds the table name of the user in the database.
	Table = "users"
	// RoleBindTable is the table that holds the role_bind relation/edge.
	RoleBindTable = "role_bindings"
	// RoleBindInverseTable is the table name for the RoleBinding entity.
	// It exists in this package in order to avoid circular dependency with the "rolebinding" package.
	RoleBindInverseTable = "role_bindings"
	// RoleBindColumn is the table column denoting the role_bind relation/edge.
	RoleBindColumn = "user_role_bind"
	// AlertTable is the table that holds the alert relation/edge. The primary key declared below.
	AlertTable = "user_alert"
	// AlertInverseTable is the table name for the Alert entity.
	// It exists in this package in order to avoid circular dependency with the "alert" package.
	AlertInverseTable = "alerts"
	// MsgTable is the table that holds the msg relation/edge.
	MsgTable = "users"
	// MsgInverseTable is the table name for the Message entity.
	// It exists in this package in order to avoid circular dependency with the "message" package.
	MsgInverseTable = "messages"
	// MsgColumn is the table column denoting the msg relation/edge.
	MsgColumn = "user_msg"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldPassword,
	FieldEmail,
	FieldPhone,
	FieldDisable,
	FieldCreateTime,
	FieldUpdateTime,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "users"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_msg",
}

var (
	// AlertPrimaryKey and AlertColumn2 are the table columns denoting the
	// primary key for the alert relation (M2M).
	AlertPrimaryKey = []string{"user_id", "alert_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
)
