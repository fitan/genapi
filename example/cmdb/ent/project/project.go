// Code generated by entc, DO NOT EDIT.

package project

import (
	"time"
)

const (
	// Label holds the string label denoting the project type in the database.
	Label = "project"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"

	// EdgeRoleBindings holds the string denoting the role_bindings edge name in mutations.
	EdgeRoleBindings = "role_bindings"
	// EdgeServices holds the string denoting the services edge name in mutations.
	EdgeServices = "services"

	// Table holds the table name of the project in the database.
	Table = "projects"
	// RoleBindingsTable is the table the holds the role_bindings relation/edge.
	RoleBindingsTable = "role_bindings"
	// RoleBindingsInverseTable is the table name for the RoleBinding entity.
	// It exists in this package in order to avoid circular dependency with the "rolebinding" package.
	RoleBindingsInverseTable = "role_bindings"
	// RoleBindingsColumn is the table column denoting the role_bindings relation/edge.
	RoleBindingsColumn = "project_role_bindings"
	// ServicesTable is the table the holds the services relation/edge.
	ServicesTable = "services"
	// ServicesInverseTable is the table name for the Service entity.
	// It exists in this package in order to avoid circular dependency with the "service" package.
	ServicesInverseTable = "services"
	// ServicesColumn is the table column denoting the services relation/edge.
	ServicesColumn = "project_services"
)

// Columns holds all SQL columns for project fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldName,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)
