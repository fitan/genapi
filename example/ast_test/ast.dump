([]*ast.File) (len=1 cap=1) {
 (*ast.File)(0xc00009e280)({
  Doc: (*ast.CommentGroup)(<nil>),
  Package: (token.Pos) 83,
  Name: (*ast.Ident)(0xc00009c8e0)(types),
  Decls: ([]ast.Decl) (len=2 cap=2) {
   (*ast.GenDecl)(0xc000086340)({
    Doc: (*ast.CommentGroup)(<nil>),
    TokPos: (token.Pos) 98,
    Tok: (token.Token) import,
    Lparen: (token.Pos) 105,
    Specs: ([]ast.Spec) (len=1 cap=1) {
     (*ast.ImportSpec)(0xc0000f02a0)({
      Doc: (*ast.CommentGroup)(<nil>),
      Name: (*ast.Ident)(0xc00009c900)(models),
      Path: (*ast.BasicLit)(0xc00009c920)({
       ValuePos: (token.Pos) 115,
       Kind: (token.Token) STRING,
       Value: (string) (len=23) "\"ast_test/types/models\""
      }),
      Comment: (*ast.CommentGroup)(<nil>),
      EndPos: (token.Pos) 0
     })
    },
    Rparen: (token.Pos) 139
   }),
   (*ast.GenDecl)(0xc000086400)({
    Doc: (*ast.CommentGroup)(<nil>),
    TokPos: (token.Pos) 142,
    Tok: (token.Token) type,
    Lparen: (token.Pos) 0,
    Specs: ([]ast.Spec) (len=1 cap=1) {
     (*ast.TypeSpec)(0xc0000f02d0)({
      Doc: (*ast.CommentGroup)(<nil>),
      Name: (*ast.Ident)(0xc00009c940)(In),
      Assign: (token.Pos) 0,
      Type: (*ast.StructType)(0xc0000c6168)({
       Struct: (token.Pos) 150,
       Fields: (*ast.FieldList)(0xc0000f0300)({
        Opening: (token.Pos) 157,
        List: ([]*ast.Field) (len=2 cap=2) {
         (*ast.Field)(0xc000086380)({
          Doc: (*ast.CommentGroup)(<nil>),
          Names: ([]*ast.Ident) (len=1 cap=1) {
           (*ast.Ident)(0xc00009c960)(Hello)
          },
          Type: (*ast.Ident)(0xc00009c980)(string),
          Tag: (*ast.BasicLit)(<nil>),
          Comment: (*ast.CommentGroup)(<nil>)
         }),
         (*ast.Field)(0xc0000863c0)({
          Doc: (*ast.CommentGroup)(<nil>),
          Names: ([]*ast.Ident) (len=1 cap=1) {
           (*ast.Ident)(0xc00009c9a0)(Out)
          },
          Type: (*ast.SelectorExpr)(0xc0000c6150)({
           X: (*ast.Ident)(0xc00009c9c0)(models),
           Sel: (*ast.Ident)(0xc00009c9e0)(Out)
          }),
          Tag: (*ast.BasicLit)(<nil>),
          Comment: (*ast.CommentGroup)(<nil>)
         })
        },
        Closing: (token.Pos) 191
       }),
       Incomplete: (bool) false
      }),
      Comment: (*ast.CommentGroup)(<nil>)
     })
    },
    Rparen: (token.Pos) 0
   })
  },
  Scope: (*ast.Scope)(0xc00008a250)(scope 0xc00008a250 {
	type In
}
),
  Imports: ([]*ast.ImportSpec) (len=1 cap=1) {
   (*ast.ImportSpec)(0xc0000f02a0)({
    Doc: (*ast.CommentGroup)(<nil>),
    Name: (*ast.Ident)(0xc00009c900)(models),
    Path: (*ast.BasicLit)(0xc00009c920)({
     ValuePos: (token.Pos) 115,
     Kind: (token.Token) STRING,
     Value: (string) (len=23) "\"ast_test/types/models\""
    }),
    Comment: (*ast.CommentGroup)(<nil>),
    EndPos: (token.Pos) 0
   })
  },
  Unresolved: ([]*ast.Ident) (len=2 cap=2) {
   (*ast.Ident)(0xc00009c980)(string),
   (*ast.Ident)(0xc00009c9c0)(models)
  },
  Comments: ([]*ast.CommentGroup) <nil>
 })
}
